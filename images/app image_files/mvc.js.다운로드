function List(t){if(0!=(t=t||[]).length){this.head={data:t[0],pre:null,next:null};for(var n=this.head,e=1;e<t.length;++e)n.next={data:t[e],pre:n,next:null},n=n.next}else this.head=null}function insertAfter(t,n){n.next.pre={data:_.clone(t),pre:n,next:n.next},n.next=n.next.pre}function removeNode(t){if(null!=t.next&&(t.next.pre=t.pre),null!=t.pre&&(t.pre.next=t.next),null!=t.list){var n=t.next||t.pre;null!=n?(t.list.head=n,n.list=t.list):t.list.head=null,t.list=null}}function HierarchyBoundary(t,n){for(var e=Math.floor(Math.log2(n.length)),r=3,a=1<<e-2,i=[],o=n.length,s=0;s<o;s+=a)i.push({index:s});var d=o/16;i.push({index:0});for(var u=new List(i),l=u.head;null!=l.next;){var h=n[l.data.index];null==l.data.dis&&(l.data.dis=absdis(h,t));var c=l.next.data,x=n[c.index];if((a=c.index-l.data.index)<=1){var f=cosdis({x:h.x-t.x,y:h.y-t.y},{x:x.x-t.x,y:x.y-t.y}),y=l.data.t2=Math.sqrt((1-f)/(1+f));(l=l.next).data.t1=y}else{r=e+1-Math.floor(Math.log2(a));if(l.data.dis>d*Math.pow(.4,r)){f=cosdis({x:h.x-t.x,y:h.y-t.y},{x:x.x-t.x,y:x.y-t.y});if(Math.acos(f)<.75*Math.pow(.8,r)){y=l.data.t2=Math.sqrt((1-f)/(1+f));(l=l.next).data.t1=y;continue}}a=1<<e-r,insertAfter({index:l.data.index+a},l)}}return l.data.t2=u.head.data.t2,l.data.dis=u.head.data.dis,u}function Vec2d(t,n){this.x=t||0,this.y=n||0}function barycentric(t,n){var e=new Vec2d;return n.forEach(function(n,r){e.plus(t[r],n)}),e.pos()}function barycentricSparse(t,n){var e=new Vec2d;for(var r in n){var a=n[r];a>0&&e.plus(t[r],a)}return e.pos()}function powdiv(t,n){for(var e=0;!1&t&&e<n;)e++;return e}function Vec(){}function drawTriangulation(t,n,e,r){var a=r.pos||{x:0,y:0},i=t.strokeStyle,o=t.lineWidth;function s(t){var e=n[t];return{x:e[0]+a.x,y:e[1]+a.y}}t.strokeStyle=r.pColor||"yellow",t.lineWidth=r.pWidth||.2,t.beginPath(),e.forEach(function(n){var e=s(n[0]);if(Number.isInteger(n[1])){var r=s(n[1]);t.moveTo(e.x,e.y),t.lineTo(r.x,r.y)}else n[1].forEach(function(n){var r=s(n);t.moveTo(e.x,e.y),t.lineTo(r.x,r.y)})}),t.stroke(),t.closePath(),t.strokeStyle=i,t.lineWidth=o}function boundaryPolygon(t){for(var n=t.map(function(t){return[t.x,t.y]}),e=new Array(n.length),r=1;r<n.length;++r)e[r-1]=[r-1,r];return e[n.length-1]=[n.length-1,0],{points:n,edges:e}}function adaptiveMesh(t,n){var e=boundaryPolygon(t),r=(n=n||.125,cdt2d(e.points,e.edges,{criteria:n,size_criteria:100}).stars.map(function(t,n){return[n,t]}));return{points:e.points,edges:r.concat(e.edges)}}function getMVC(t,n,e,r){return 0}function mvCoordinates(t,n,e,r){return t.Y.map(function(t){var a,i=HierarchyBoundary(r(t),n),o=i.head,s=[],d=0;for(o=i.head;null!=o.next;){var u=((o=o.next).data.t1+o.data.t2)/o.data.dis;u!=u&&(o.data.t1,o.data.t1),s.push([(a=n[o.data.index],e({x:a.x-1,y:a.y-1})),u]),d+=u}return 0==d?(0,[]):s.map(function(t){return[t[0],t[1]/d]})})}List.prototype.isEmpty=function(){return null==this.head},List.prototype.traverse=function(t){for(var n=this.head;null!=n;)t(n.data),n=n.next},List.prototype.map=function(t){var n=[];return this.traverse(function(e){n.push(t(e))}),n},Vec2d.prototype.plus=function(t,n){n=n||1;this.x+=t.x*n,this.y+=t.y*n},Vec2d.prototype.pos=function(){return{x:this.x,y:this.y}},Vec2d.prototype.norm=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},Vec.diff=function(t,n,e){for(var r=e||Math.min(t.length,n.length),a=new Array(r),i=0;i<r;++i)a[i]=t[i]-n[i];return a},Vec.mul=function(t,n,e){for(var r=e||t.length,a=new Array(r),i=0;i<r;++i)a[i]=t[i]*n;return a};