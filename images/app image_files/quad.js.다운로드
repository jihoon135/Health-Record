var neighbor4=[[0,1],[1,0],[0,-1],[-1,0]],neighbor4p=[[1,1],[1,-1],[-1,-1],[-1,1]],neighbor8=[[0,1],[1,1],[1,0],[1,-1],[0,-1],[-1,-1],[-1,0],[-1,1]];function drawPixel(r,e,t,n){if(!(e.x<0||e.x>=r.width||e.y<0||e.y>=r.height)){for(var a=4*(e.y*r.width+e.x),i=0;i<3;++i)r.data[a+i]=Math.floor(256*t[i]);void 0!==n&&(r.data[a+3]=Math.floor(256*n))}}function drawRect(r,e,t,n,a){for(var i=4*(e.y*r.width+e.x),o=4*(t.y*r.width+t.x),h=4*r.width,u=(a=a||1,i);u<o;u+=h)for(var l=4*(t.x-e.x);l>=0;l-=4){for(var f=0;f<3;++f)r.data[u+l+f]=Math.floor(256*n[f]);r.data[u+l+3]=Math.floor(256*a)}}function setRGB(r,e,t,n){var a=4*(r.width*e.y+e.x);r.data[a]=t[0],r.data[a+1]=t[1],r.data[a+2]=t[2];n=n||1;r.data[a+3]=Math.floor(256*n)}function getRGB(r,e){var t=4*(r.width*e.y+e.x);return[r.data[t],r.data[t+1],r.data[t+2]]}function diffImg(r,e){for(var t={width:Math.min(r.width,e.width),height:Math.min(r.height,e.height),data:[]},n=0;n<height;++n)for(var a=0;a<width;++a){var i=getRGB(r,{x:a,y:n});getRGB(e,{x:a,y:n});t.data.push(i[0]-rgb2[0],i[1]-rgb2[1],i[2]-rgb2[2])}return t}function absdis(r,e){var t=r.x-e.x,n=r.y-e.y;return Math.sqrt(t*t+n*n)}function cosdis(r,e){return 0==r.x&&0==r.y||0==e.x&&0==e.y?0:(r.x*e.x+r.y*e.y)/Math.sqrt(r.x*r.x+r.y*r.y)/Math.sqrt(e.x*e.x+e.y*e.y)}function det(r,e){return r.x*e.y-r.y*e.x}function area(r){if(r.length<3)return 0;for(var e=0,t=1;t<r.length;++t)e+=det(r[t-1],r[t]);return(e+=det(r[r.length-1],r[0]))/2}function normalize(r){var e=0;return r.forEach(function(r){e+=r}),r.map(function(r){return r/e})}function powdiv(r,e){for(var t=0;!1&r&&t<e;)t++;return t}function rnd_vec(r){return new Array(r).fill(null).map(function(){return Math.random()})}function l2norm(r){return r.forEach(function(r){r*r}),r}function dotprod(r,e){for(var t=Math.min(r.length,e.length),n=0;n<t;++n)r[n]*e[n]}function linadd(r,e,t){t=t||1;return e.map(function(e,n){return r[n]+t*e})}function rt_reduce(r,e){for(var t=r[0],n=1;n<r.length;++n)t=e(t,r[n])}function dlint(r,e,t,n){n=n||t;var a=[],i=e.x-r.x,o=e.y-r.y;return 0==i||i==t?0==o||o==n?a.push([e,1]):(a.push([{x:e.x,y:r.y},1-o/n]),a.push([{x:e.x,y:r.y+n},o/n])):0==o||o==n?(a.push([{x:r.x,y:e.y},1-i/t]),a.push([{x:r.x+t,y:e.y},i/t])):(o/=n,i/=t,a.push([r,(1-o)*(1-i)]),a.push([{x:r.x,y:r.y+n},o*(1-i)]),a.push([{x:r.x+t,y:r.y+n},o*i]),a.push([{x:r.x+t,y:r.y},(1-o)*i])),a}function tanhalf(r,e,t){var n=cosdis({x:e.x-r.x,y:e.y-r.y},{x:t.x-r.x,y:t.y-r.y});return Math.sqrt((1-n)/(1+n))}function polarCoordinates(r,e){var t=Math.sqrt(r*r+e*e),n=0;return t>1e-10?0==Math.sign(r)?n=e>0?Math.PI/2:-Math.PI/2:(n=Math.atan(e/r),r<0&&(n+=Math.PI)):t=0,{r:t,th:n}}function rectCoordinates(r,e){return{x:r*Math.cos(e),y:r*Math.sin(e)}}var NodeType={point:0,leaf:1,empty:2,mixed:3,inner:4};function QTreeNode(r,e){this.type=e||NodeType.leaf,this.children=Array(4).fill(null),this.pos=r}function QTree(r){for(var e=r.length-2,t=r[0].length-2,n=Math.ceil(Math.log2(Math.max(e,t))),a=1<<n-1,i=new Array(a),o=0;o<a;++o){i[o]=new Array(a);for(var h=0;h<a;++h){var u=[0,0,0,0],l={x:2*h+1,y:2*o+1},f=[0,0,0,0];[[1,1],[1,0],[0,0],[0,1]].forEach(function(n,a){var i=2*h+n[0],l=2*o+n[1];if(l>=e||i>=t)u[0]++;else{var c=r[l+1][i+1];u[c]++,f[a]=c}}),4==u[0]?d=new QTreeNode(l,NodeType.empty):u[1]<4?(0,(d=new QTreeNode(l,NodeType.mixed)).children=[f[0]>0?{x:2*h+1,y:2*o+1}:null,f[1]>0?{x:2*h+1,y:2*o}:null,f[2]>0?{x:2*h,y:2*o}:null,f[3]>0?{x:2*h,y:2*o+1}:null]):4==u[1]&&((d=new QTreeNode(l,NodeType.leaf)).children=[{x:2*(h+1),y:2*(o+1)},{x:2*(h+1),y:2*o},{x:2*h,y:2*o},{x:2*h,y:2*(o+1)}]),i[o][h]=d}}for(;(a>>=1)>1;){var c=(1<<n)/a/2,y=new Array(a);for(o=0;o<a;++o){y[o]=new Array(a).fill(null);for(h=0;h<a;++h){u=[0,0,0];var d=y[o][h]=new QTreeNode({x:c*(2*h+1),y:c*(2*o+1)});if([[1,1],[1,0],[0,0],[0,1]].forEach(function(r,e){var t=2*h+r[0],n=2*o+r[1],a=i[n][t];switch(a.type){case NodeType.leaf:u[1]++,d.children[e]=a;break;case NodeType.empty:u[0]++,d.children[e]=null;break;default:u[2]++,d.children[e]=a}}),4==u[0])d.type=NodeType.empty,d.children=null;else if(u[1]<4)d.type=NodeType.inner;else{for(var s=!0,p=[[0,-1],[1,-1],[2,0],[2,1],[1,2],[0,2],[-1,1],[-1,0]],v=0;v<8;++v){var x=p[v],g={x:2*h+x[0],y:2*o+x[1]};if(g.x>=0&&g.y>=0&&g.x<2*a&&g.y<2*a)if(i[g.y][g.x].type!=NodeType.leaf){s=!1;break}}s?(d.children=[[1,1],[1,0],[0,0],[0,1]].map(function(r,e){return{x:2*c*(h+r[0]),y:2*c*(o+r[1])}}),d.type=NodeType.leaf):d.type=NodeType.inner}}}i=y}var m=new QTreeNode({x:1<<n-1,y:1<<n-1},NodeType.inner);return m.children[0]=i[1][1],m.children[1]=i[0][1],m.children[2]=i[0][0],m.children[3]=i[1][0],m.children.forEach(function(r,e,t){r.type==NodeType.empty&&(t[e]=null)}),m}function DoubleMap(r){this.forward=new Array(r);for(var e=0;e<r;e++)this.forward[e]=[];this.reverse={}}function testReverse(r,e,t){var n=!0,a=e[0].length-2,i=e.length-2;function o(r){return{x:r%a,y:Math.floor(r/a)}}var h=[];r.map(function(r,e){var n=o(e),a=t.search(n);if(null==a)0,r.length;else{1==a.length&&(0,h.push(n));var i={x:0,y:0,i:0};a.forEach(function(r){i.x+=r[0].x*r[1],i.y+=r[0].y*r[1],i.i+=r[1]}),Math.sign(i.x-n.x),Math.sign(i.y-n.y),i.i}return[n,a]});function u(r){var t=o(r);return t.y>=i||0==e[t.y+1][t.x+1]}for(var l in r){var f=r[l];if(0==f.length)u(l)||(n=!1,0);else if(f.length>4);else{var c={x:0,y:0,i:0};f.forEach(function(r){var e=o(r[0]);c.x+=e.x*r[1],c.y+=e.y*r[1],c.i+=r[1],r[1]<0||r[1]});var y=o(l);0==Math.sign(c.x-y.x)&&0==Math.sign(c.y-y.y)&&0==Math.sign(c.i-1)||(n=!1,0)}}return n}function reduceMap(r){for(var e=QTree(r),t=[[],[],[]],n=r.length-2,a=r[0].length-2,i=1;i<=n;i++)for(var o=1;o<=a;o++){var h=r[i][o];t[h].push(a*(i-1)+(o-1))}var u=new DoubleMap(n*a);function l(r){return r.y*a+r.x}var f={};return e.traverse(function(e){if(Array.isArray(e)){var t=e[0].x-e[2].x,n=l(e[2]),i=l(e[1]),o=l(e[0]),h=l(e[3]),c=[o,i,n,h];if(1==t)return void e.forEach(function(e,t){var n=r[e.y+1][e.x+1];n>=2?(f[c[t]]=1,u.add(c[t],c[t],1),0):n>0&&(u.add(c[t],c[t],1),0)});t*t;var y=n;r[e[2].y+1][e[2].x+1],u.add(y,y,1);for(var d=1;d<t;d++){var s=d/t;u.add(y+d,n,1-s),u.add(y+d,i,s)}for(var p=1;p<t;p++){y+=a;var v=p/t;u.add(y,n,1-v),u.add(y,h,v);for(d=1;d<t;d++){s=d/t;u.add(y+d,n,(1-v)*(1-s)),u.add(y+d,i,(1-v)*s),u.add(y+d,h,v*(1-s)),u.add(y+d,o,v*s)}}}else{var x=r[e.y+1][e.x+1];if(x>0){y=l(e);u.add(y,y,1),u.forward[y].length,0,x>=2&&(f[y]=1,0)}}}),{dmap:u,tree:e,bmap:f,hash:l}}function vecType(r,e){var t=r[0].length-2,n=r.length-2,a={};function i(r,e){return r+e*t}for(var o=0;o<n;o++)for(var h=0;h<t;h++){var u=r[o+1][h+1];if(u>0){var l=i(h,o);u>=2?(a[l]=2,0):(a[l]=0,0,null!=e[l]&&(a[l]=1,0))}}return a}function getTypeVec(r){var e=[],t=[],n=[],a=0,i={};for(var o in r)switch(i[o]=a++,r[o]){case 2:e.push(o);break;case 1:n.push(o);case 0:t.push(o)}return{b:e,X:t,Y:n,vid:i}}function Laplacian(r,e){this.height=r.length-2,this.width=r[0].length-2,this.mask=r,this.vmap=vecType(r,e.reverse),this.dmap=e}function visitNeighbor4(r,e,t){neighbor4.map(function(n,a){var i={x:r.x+n[0],y:r.y+n[1]};return null!=t?e.call(t,i):e(i)})}function run_CGD(r,e,t){var n=new Laplacian(r,e.reverse),a=getTypeVec(n.vmap),i=t.map(function(r){return getGDParams(n,e,a,r)});return y0=Array(a.Y.length).fill(0),i.map(function(r,e){return t[e].concat(conjGD(r.A,r.b,y0,1e-4,100))})}function getGDParams(r,e,t,n){var a=t.b.map(function(r){var e=n[r];return null==e&&(e=0),e}),i=e.rmul(n,t.X),o=r.rmul(t.X,i,t.X),h=r.reverse(t.b,a,t.X),u=Vec.diff(o,h),l=_.object(t.b,u),f=e.rmul(l,t.Y),c=r.rmul(e.reverse);return{A:e.back(c,t.Y,t.Y,!0),b:f}}function conjGD(r,e,t,n,a){for(var i=t,o=e,h=l2norm(o),u=n*Math.sqrt(h),l=0,f=h,c=0;c<a;++c){l=l*h/f+o;var y=r.map(function(r){return dotprod(r,l)}),d=h/dotprod(l,y);if(linadd(i,l,d),linadd(o,y,-d),f=h,h=l2norm(o),Math.sqrt(h)<u)break}return i}QTreeNode.prototype.childAt=function(r){return r.x>=this.pos.x?r.y>=this.pos.y?this.children[0]:this.children[1]:r.y<this.pos.y?this.children[2]:this.children[3]},QTreeNode.prototype.traverse=function(r){if(this.type==NodeType.leaf)r(this.children);else if(this.type==NodeType.mixed)this.children.forEach(function(e){null!=e&&r(e)});else if(this.type==NodeType.empty);else if(this.type==NodeType.inner)for(var e=0;e<4;++e)null!=this.children[e]&&this.children[e].traverse(r)},QTreeNode.prototype.search=function(r){if(r.x<0||r.y<0||r.x>=2*this.pos.x||r.y>=2*this.pos.y)return null;var e;if(this.type==NodeType.inner)return null==(e=this.childAt(r))?null:e.search(r);if(this.type==NodeType.mixed)return null==(e=this.childAt(r))?null:(e.x!=r.x||(e.y,r.y),[[e,1]]);if(this.type==NodeType.empty)return null;this.type,NodeType.leaf;var t=this.children[0].y-this.children[2].y;return dlint(this.children[2],r,t)},QTreeNode.prototype.mosaic=function(r){this.traverse(function(e){if(Array.isArray(e)){var t=e[0].x-e[2].x;if(t<4)drawPixel(r,{x:Math.floor((e[2].x+e[0].x)/2),y:Math.floor((e[0].y+e[2].y)/2)},[.1,.3,.3],1);else{var n=rnd_vec(3);drawRect(r,e[2],e[0],linadd([.1,0,.1],n,.2*Math.log2(t)),.8)}}else{drawPixel(r,e,n=[.1,.2,.1],.9)}})},DoubleMap.prototype.add=function(r,e,t){null==this.reverse[e]&&(this.reverse[e]=[]),this.forward[r].push([e,t]),this.reverse[e].push([r,t])},DoubleMap.prototype.mul=function(r){var e={};for(var t in this.reverse){var n=0;this.reverse[t].forEach(function(e){n+=r[e[0]]*e[1]}),e[t]=n}return e},DoubleMap.prototype.rmul=function(r,e){for(var t=this.forward.length,n=Array(t),a=0;a<t;++a){var i=0;this.forward[a].forEach(function(e){i+=r[e[0]]*e[1]}),n[a]=i}return null==e?n:e.map(function(r){var e=n[r];return null!=e?e:0})},DoubleMap.prototype.back=function(r,e,t,n){for(var a={},i=[],o=0;o<e.length;o++){var h=e[o],u=_.object(r[h]);a[h]=this.rmul(u,t),i.push(a[h])}return 1==n?i:a},Laplacian.prototype.convert=function(r,e){return r<0||e<0?null:e*this.width+r},Laplacian.prototype.convert_back=function(r){return{x:r%this.width,y:Math.floor(r/this.width)}},Laplacian.prototype.mul=function(r,e,t){for(var n={},a=0;a<t.length;++a){var i=r[a],o=e[a],h=this.convert_back(i);null==n[i]&&(n[i]=0),n[i]-=4*o,visitNeighbor4(h,function(r){var e=this.convert(r);null!=e&&null!=this.vmap[e]&&(null==n[e]&&(n[e]=0),n[e]+=o)},this)}return t.map(function(r){return null!=n[r]?n[r]:0})},Laplacian.prototype.reverse=function(r,e,t){for(var n={},a=0;a<r.length;++a){var i=t[a],o=e[a];visitNeighbor4(this.convert_back(i),function(r){var e=this.convert(r);null!=e&&null!=this.vmap[e]&&(null==n[e]&&(n[e]=0),n[e]-=o)},this)}return t.map(function(r,e){return null!=n[r]?n[r]:0})},Laplacian.prototype.rmul=function(r,e,t){for(var n={},a=e.length-1;a>=0;a--){var i=e[a],o=i[0],h=i[1];this.convert_back(o);null==n[o]&&(n[o]=0),n[o]-=4*h,visitNeighbor4(pos,function(r){var e=this.convert(r);null!=e&&null!=this.vmap[e]&&(null==n[e]&&(n[e]=0),n[e]+=h)},this)}if(null==t){var u=[];for(var o in n){var l=n[o];0!=l&&u.push([o,l])}return u}if(Array.isArray(t)){u=[];return t.forEach(function(r){var e=n[r];null!=e&&0!=e&&u.push([r,e])}),u}return Object.keys(t).map(function(r){var e=[];return t[r].forEach(function(r){var t=n[r];null!=t&&0!=t&&e.push([r,t])}),e})};