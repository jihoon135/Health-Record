function ImageCloner(t,r,e){this.mask=t,this.boundary=r,this.fg_img=e,this.rMaps=reduceMap(t);var a=this.rev=this.rMaps.dmap.reverse,n=(this.tree=this.rMaps.tree,this.rMaps.bmap),i=this.rMaps.hash;r.forEach(function(t,r){var e={x:t.x-1,y:t.y-1},s=i(e);null!=n[s]&&null!=a[s]||0});var s=this.vmap=vecType(t,this.rev),o=(this.vecs=getTypeVec(s),t[0].length-2);this.Syb=mvCoordinates(this.vecs,this.boundary,this.rMaps.hash,function(t){return{x:t%o+1,y:Math.floor(t/o)+1}})}ImageCloner.prototype.quadMesh=function(){var t=this.boundary.length-1,r=vecType(this.mask,this.rMaps.dmap.reverse),e=(getTypeVec(r),this.mask[0].length-2),a=this.rMaps.hash;this.rMaps.tree;var n={},i=(this.mask,Object.keys(this.rMaps.dmap.reverse)),s=i.length,o=new Array(s).fill(null);i=i.map(function(t,r){n[t]=r;var a=function(t){return{x:t%e,y:Math.floor(t/e)}}(t=Number(t));return o[r]=[a.x,a.y],t});for(var h={},c=new Array(t),u=0;u<t;++u){var p=this.boundary[u],v={x:p.x-1,y:p.y-1},f=a(v);null==n[f]||(h[f]=n[f]),c[u]=h[f]}var l=[];for(u=2;u<t;u+=2)l.push([c[u-2],c[u]]);l.push([c[t-1^1],c[0]]),l.sort(function(t,r){return t[0]-r[0]||t[1]-r[1]});var y=cdt2d(o,l,{criteria:.125,size_criteria:10}),m=[];return y.stars.forEach(function(t,r){for(var e=0;e<t.length;e+=2)r<t[e]&&t[e]<t[e+1]&&m.push([t[e],t[e+1]])}),{points:o,edges:m.concat(l)}},ImageCloner.prototype.paintSrc=function(t){this.boundary.forEach(function(r){drawPixel(t,{x:r.x-1,y:r.y-1},[.1,.1,.1],1)}),this.rMaps.tree.mosaic(t);var r,e=HierarchyBoundary({x:t.width>>1,y:t.height/2>>1},this.boundary),a=this.boundary;e.traverse(function(r){var e=a[r.index];drawPixel(t,{x:e.x-1,y:e.y-1},[1,0,0],1),neighbor8.forEach(function(r){drawPixel(t,{x:e.x-1+r[0],y:e.y-1+r[1]},[.9,.1,.1],1)})});try{r=this.quadMesh()}catch(t){var n=e.map(function(t){return a[t.index]});r=adaptiveMesh(n)}var i=this.mask[0].length-2;for(var s in this.rMaps.dmap.reverse){var o=Math.floor(s/i);drawPixel(t,{x:s%i,y:o},[0,0,.9],1)}return{img:t,post_paint:function(t,e){drawTriangulation(t,r.points,r.edges,{pos:e,pColor:"white",pWidth:.4})}}},ImageCloner.prototype.interpolate=function(t){var r=this.Syb.map(function(r){var e=0;return r.forEach(function(r){0;var a=r[0],n=t[a];e+=n*r[1]}),e});t=this.vecs.b.map(function(r){return t[r]||0});var e=_.object(this.vecs.Y.concat(this.vecs.b),r.concat(t));return this.rMaps.dmap.rmul(e,this.vecs.b.concat(this.vecs.X))};var Mode={composite:0,mvc:3,cgd:4,avg:2,membrane:1},selectedMode=Mode.mvc;function floatToRGB(t){return[Math.floor(256*t[0]),Math.floor(256*t[1]),Math.floor(256*t[2])]}ImageCloner.prototype.paintTgt=function(t,r){this.mask;var e=this.fg_img,a=(this.rMaps,this.mask.length,this.mask[0].length-2),n=this.vecs;function i(t){return{x:t%a,y:Math.floor(t/a)}}for(var s=n.b.concat(n.X),o=n.b.map(function(t){var a=i(t);return Vec.diff(getRGB(r,a),getRGB(e,a),3)}),h=_.unzip(o).map(function(t){return _.object(n.b,t)}),c=Array(3),u=0;u<3;++u)c[u]=this.interpolate(h[u]);var p=_.unzip(c);for(u=s.length-1;u>=0;u--){var v=i(s[u]),f=getRGB(e,v),l=p[u].map(function(t,r){return Math.round(f[r]+t)});setRGB(t,v,l,1)}return t};